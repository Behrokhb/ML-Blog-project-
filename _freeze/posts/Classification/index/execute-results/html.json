{
  "hash": "31e6b4480b1bb5f9612fed25387970c0",
  "result": {
    "markdown": "---\ntitle: \"Clssification\"\nauthor: \"Behrokh Bazmara\"\ndate: \"2023-12-01\"\ncategories: [news, code, analysis]\n---\n\n\nIn my classification code, I employed the k-Nearest Neighbors (kNN) algorithm to categorize instances within my data set. The kNN method is a simple yet effective algorithm that classifies data points based on the majority class of their k nearest neighbors in the feature space.\n\nInitially, I preprocessed the data, handling any missing values or normalizing features if necessary. Then, I split the data set into training and testing sets to evaluate the model's performance. After selecting an appropriate value for k, the number of neighbors to consider, I trained the kNN classifier on the training data. During the classification phase, the algorithm examined the features of a test instance and identified its k nearest neighbors based on a chosen distance metric. The class most prevalent among these neighbors was assigned to the test instance. Finally, I assessed the model's accuracy and other relevant metrics on the testing set to gauge its performance. The flexibility and simplicity of the kNN algorithm made it a suitable choice for classifying instances in my data set, providing a practical and interpretable solution for the given classification tasks.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n                   # Classification\n# Install and load necessary packages\n#if (!requireNamespace(\"class\", quietly = TRUE)) {\n # install.packages(\"class\")\n#}\n#if (!requireNamespace(\"caret\", quietly = TRUE)) {\n # install.packages(\"caret\")\n#}\n#if (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n # install.packages(\"ggplot2\")\n#}\n#if (!requireNamespace(\"PRROC\", quietly = TRUE)) {\n # install.packages(\"PRROC\")\n#}\n\nlibrary(pROC)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'pROC' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType 'citation(\"pROC\")' for a citation.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'pROC'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n```\n:::\n\n```{.r .cell-code}\nlibrary(PRROC)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'PRROC' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(class)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'class' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caret' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Read in data\nFitData2<-read.csv('Book3.csv') \n\n#looking at the data\nnames(FitData2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AADT\"         \"Latitude\"     \"Longitude\"    \"yn\"           \"Divided\"     \n [6] \"LaneCount\"    \"DGAC\"         \"Latex\"        \"SMA\"          \"PCCP\"        \n[11] \"Age\"          \"Friction\"     \"Macro\"        \"IRI\"          \"Gradient\"    \n[16] \"Curvature\"    \"LatitudeGPS\"  \"LongitudeGps\" \"Crash\"        \"lnAADT\"      \n```\n:::\n\n```{.r .cell-code}\n# Split the dataset into training and testing sets\nset.seed(123)\nsplitIndex <- createDataPartition(FitData2$LaneCount, p = 0.7, list = FALSE)\ntrain_data <- FitData2[splitIndex, ]\ntest_data <- FitData2[-splitIndex, ]\n\n# Define the number of neighbors (k) for the KNN model\nk <- 9\n\n# Train the KNN model\nknn_model <- knn(train = train_data[, 1:4], test = test_data[, 1:4], cl = train_data$LaneCount, k = k)\n\n# Create a confusion matrix\nconf_matrix <- confusionMatrix(knn_model, as.factor(test_data$LaneCount))\n\n# Display the confusion matrix\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    1    2    3    4    5\n         1    5    4    0    0    0\n         2    8 1413   92   14   12\n         3    2   64  706   12    0\n         4    0   32   15  242    0\n         5    0    2    0    0   21\n\nOverall Statistics\n                                          \n               Accuracy : 0.9028          \n                 95% CI : (0.8909, 0.9138)\n    No Information Rate : 0.573           \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.8277          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: 1 Class: 2 Class: 3 Class: 4 Class: 5\nSensitivity          0.333333   0.9327   0.8684  0.90299 0.636364\nSpecificity          0.998479   0.8884   0.9574  0.98022 0.999234\nPos Pred Value       0.555556   0.9181   0.9005  0.83737 0.913043\nNeg Pred Value       0.996205   0.9077   0.9425  0.98896 0.995422\nPrevalence           0.005673   0.5730   0.3075  0.10136 0.012481\nDetection Rate       0.001891   0.5344   0.2670  0.09153 0.007943\nDetection Prevalence 0.003404   0.5821   0.2965  0.10930 0.008699\nBalanced Accuracy    0.665906   0.9105   0.9129  0.94160 0.817799\n```\n:::\n\n```{.r .cell-code}\n# Visualize the confusion matrix\n#png(file=\"cmplot.png\")\nconf_matrix_table <- as.table(conf_matrix)\nggplot(data = as.data.frame(as.table(conf_matrix)), aes(x = Reference, y = Prediction, fill = Freq)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = Freq), vjust = 1) +\n  scale_fill_gradient(low = \"orange\", high = \"darkblue\") +\n  theme_minimal() +\n  labs(title = \"Plot of Confusion Matrix\",\n       x = \"Reference\",\n       y = \"Prediction\",\n       fill = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#dev.off()\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}